# The same preprocessing is applied as in the https://github.com/SOLAR-group/LHC-SE.git repo
import re
import nltk
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize
nltk.download("punkt_tab")
nltk.download("stopwords")
extended_stopwords = [
    "a",
    "aaaaa",
    "aaaaaa",
    "aaaaaaa",
    "aaaaaaaa",
    "aaaaaaaaaa",
    "about",
    "above",
    "across",
    "after",
    "again",
    "against",
    "all",
    "almost",
    "alone",
    "along",
    "already",
    "also",
    "although",
    "always",
    "am",
    "among",
    "an",
    "and",
    "another",
    "any",
    "anybody",
    "anyone",
    "anything",
    "anywhere",
    "are",
    "aren't",
    "around",
    "as",
    "ask",
    "asked",
    "asking",
    "asks",
    "at",
    "away",
    "b",
    "back",
    "be",
    "became",
    "because",
    "become",
    "becomes",
    "been",
    "before",
    "began",
    "behind",
    "being",
    "beings",
    "below",
    "best",
    "better",
    "between",
    "big",
    "both",
    "but",
    "by",
    "c",
    "came",
    "can",
    "cannot",
    "can't",
    "case",
    "cases",
    "certain",
    "certainly",
    "clear",
    "clearly",
    "come",
    "could",
    "couldn't",
    "d",
    "did",
    "didn't",
    "differ",
    "different",
    "differently",
    "do",
    "does",
    "doesn't",
    "doing",
    "done",
    "don't",
    "down",
    "downed",
    "downing",
    "downs",
    "during",
    "e",
    "each",
    "early",
    "either",
    "end",
    "ended",
    "ending",
    "ends",
    "enough",
    "even",
    "evenly",
    "ever",
    "every",
    "everybody",
    "everyone",
    "everything",
    "everywhere",
    "f",
    "face",
    "faces",
    "fact",
    "facts",
    "far",
    "felt",
    "few",
    "find",
    "finds",
    "first",
    "for",
    "four",
    "from",
    "full",
    "fully",
    "further",
    "furthered",
    "furthering",
    "furthers",
    "g",
    "gave",
    "general",
    "generally",
    "get",
    "gets",
    "give",
    "given",
    "gives",
    "go",
    "going",
    "good",
    "goods",
    "got",
    "great",
    "greater",
    "greatest",
    "group",
    "grouped",
    "grouping",
    "groups",
    "h",
    "had",
    "hadn't",
    "has",
    "hasn't",
    "have",
    "haven't",
    "having",
    "he",
    "he'd",
    "he'll",
    "her",
    "here",
    "here's",
    "hers",
    "herself",
    "he's",
    "high",
    "higher",
    "highest",
    "him",
    "himself",
    "his",
    "how",
    "however",
    "how's",
    "i",
    "i'd",
    "if",
    "i'll",
    "i'm",
    "important",
    "in",
    "interest",
    "interested",
    "interesting",
    "interests",
    "into",
    "is",
    "isn't",
    "it",
    "its",
    "it's",
    "itself",
    "i've",
    "j",
    "just",
    "k",
    "keep",
    "keeps",
    "kind",
    "knew",
    "know",
    "known",
    "knows",
    "l",
    "large",
    "largely",
    "last",
    "later",
    "latest",
    "least",
    "less",
    "let",
    "lets",
    "let's",
    "like",
    "likely",
    "long",
    "longer",
    "longest",
    "m",
    "made",
    "make",
    "making",
    "man",
    "many",
    "may",
    "me",
    "member",
    "members",
    "men",
    "might",
    "more",
    "most",
    "mostly",
    "mr",
    "mrs",
    "much",
    "must",
    "mustn't",
    "my",
    "myself",
    "n",
    "necessary",
    "need",
    "needed",
    "needing",
    "needs",
    "never",
    "new",
    "newer",
    "newest",
    "next",
    "no",
    "nobody",
    "non",
    "noone",
    "nor",
    "not",
    "nothing",
    "now",
    "nowhere",
    "number",
    "numbers",
    "o",
    "of",
    "off",
    "often",
    "old",
    "older",
    "oldest",
    "on",
    "once",
    "one",
    "only",
    "open",
    "opened",
    "opening",
    "opens",
    "or",
    "order",
    "ordered",
    "ordering",
    "orders",
    "other",
    "others",
    "ought",
    "our",
    "ours",
    "ourselves",
    "out",
    "over",
    "own",
    "p",
    "part",
    "parted",
    "parting",
    "parts",
    "per",
    "perhaps",
    "place",
    "places",
    "point",
    "pointed",
    "pointing",
    "possible",
    "q",
    "quite",
    "r",
    "rather",
    "really",
    "right",
    "s",
    "said",
    "same",
    "saw",
    "say",
    "says",
    "see",
    "seem",
    "seemed",
    "seeming",
    "seems",
    "sees",
    "shall",
    "shan't",
    "she",
    "she'd",
    "she'll",
    "she's",
    "should",
    "shouldn't",
    "since",
    "small",
    "so",
    "some",
    "somebody",
    "someone",
    "something",
    "somewhere",
    "state",
    "states",
    "still",
    "such",
    "sure",
    "t",
    "take",
    "taken",
    "than",
    "that",
    "that's",
    "the",
    "their",
    "theirs",
    "them",
    "themselves",
    "then",
    "there",
    "therefore",
    "there's",
    "these",
    "they",
    "they'd",
    "they'll",
    "they're",
    "they've",
    "thing",
    "things",
    "think",
    "thinks",
    "this",
    "those",
    "though",
    "thought",
    "thoughts",
    "three",
    "through",
    "thus",
    "to",
    "today",
    "together",
    "too",
    "took",
    "toward",
    "two",
    "u",
    "under",
    "until",
    "up",
    "upon",
    "us",
    "use",
    "used",
    "uses",
    "v",
    "very",
    "via",
    "w",
    "want",
    "wanted",
    "wanting",
    "wants",
    "was",
    "wasn't",
    "way",
    "ways",
    "we",
    "we'd",
    "well",
    "we'll",
    "went",
    "were",
    "we're",
    "weren't",
    "we've",
    "what",
    "what's",
    "when",
    "when's",
    "where",
    "where's",
    "whether",
    "which",
    "while",
    "who",
    "whole",
    "whom",
    "who's",
    "whose",
    "why",
    "why's",
    "will",
    "with",
    "within",
    "without",
    "won't",
    "work",
    "worked",
    "working",
    "works",
    "would",
    "wouldn't",
    "x",
    "y",
    "yes",
    "yet",
    "you",
    "you'd",
    "you'll",
    "your",
    "you're",
    "yours",
    "yourself",
    "yourselves",
    "you've",
    "z",
]

def preprocess(text: str):
    # 1. Remove URLs
    text = re.sub(r"http\S+|www\S+", "", text)

    # 2. Remove non-alphanumeric characters (except spaces)
    text = re.sub(r"[^A-Za-z0-9\s]", "", text)

    # 3. Lowercase
    text = text.lower()

    # 4. Tokenize
    tokens = word_tokenize(text)

    # 5. Remove stopwords
    stops = set(stopwords.words("english")).union(extended_stopwords)
    tokens = [t for t in tokens if t not in stops]

    # 6. Remove short tokens (< 2 characters)
    tokens = [t for t in tokens if len(t) >= 2]


    return " ".join(tokens)
